{"version":3,"file":"static/js/293.b70ce6d6.chunk.js","mappings":"8IAEAA,EAAAA,EAAMC,SAASC,QAAU,8BACzB,MAAMC,EAAU,mCA2BhB,MAEA,EAFY,CAACC,cAzBbC,iBAEI,aADuBL,EAAAA,EAAMM,IAAI,gCAADC,OAAiCJ,KACjDK,KAAKC,OACzB,EAsB4BC,gBApB5BL,eAAgCM,GAE9B,aADuBX,EAAAA,EAAMM,IAAI,WAADC,OAAYI,EAAQ,aAAAJ,OAAYJ,GAElE,EAiB6CS,cAf7CP,eAA8BM,GAE5B,aADuBX,EAAAA,EAAMM,IAAI,WAADC,OAAYI,EAAQ,qBAAAJ,OAAoBJ,GAE1E,EAY4DU,aAV5DR,eAA6BM,GAE3B,aADuBX,EAAAA,EAAMM,IAAI,WAADC,OAAYI,EAAQ,qBAAAJ,OAAoBJ,GAE1E,EAO0EW,cAL1ET,eAA8BU,GAE5B,aADuBf,EAAAA,EAAMM,IAAI,0BAADC,OAA2BJ,EAAO,WAAAI,OAAUQ,GAE9E,E,qFCvBA,MAyBE,EAzBWC,KACT,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAmB,IAc/C,OAZAC,EAAAA,EAAAA,YAAU,KACcf,WAChB,IACA,MAAMgB,QAAiBC,EAAAA,EAAUlB,gBACjCc,EAAUG,EACV,CAAE,MAAOE,GACTC,QAAQC,IAAIF,EACZ,GAEJG,EAAa,GACd,KAGCC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAAQC,SAC9Df,GAAUA,EAAOgB,KAAIC,IAAA,IAAC,GAACC,EAAE,MAAEC,GAAMF,EAAA,OACjCP,EAAAA,EAAAA,KAAA,MAAaC,MAAO,CAACS,SAAU,GAAIC,WAAY,KAAKN,UACnDL,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAE,WAAAjC,OAAa4B,GAAKH,SAAEI,KADpBD,EAEH,KACN,C","sources":["moviesAPI.ts","pages/Home.tsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\r\nconst API_KEY = '24133b1b6fb1e59d7b163caa4eec50ae';\r\n\r\nasync function fetchTranding () {\r\n    const response = await axios.get(`3/trending/movie/day?api_key=${API_KEY}`);\r\n    return response.data.results;\r\n}\r\n\r\nasync function fetchDetailInfo (movie_id: string) {\r\n  const response = await axios.get(`3/movie/${movie_id}?api_key=${API_KEY}`);\r\n  return response;\r\n}\r\n\r\nasync function fetchCastInfo (movie_id: string) {\r\n  const response = await axios.get(`3/movie/${movie_id}/credits?api_key=${API_KEY}`);\r\n  return response;\r\n}\r\n\r\nasync function fetchReviews (movie_id: string) {\r\n  const response = await axios.get(`3/movie/${movie_id}/reviews?api_key=${API_KEY}`);\r\n  return response;\r\n}\r\n\r\nasync function fetchBySearch (value: string) {\r\n  const response = await axios.get(`3/search/movie?api_key=${API_KEY}&query=${value}`);\r\n  return response;\r\n}\r\n\r\nconst api = {fetchTranding, fetchDetailInfo, fetchCastInfo, fetchReviews, fetchBySearch};\r\n\r\nexport default api;","import moviesAPI from '../moviesAPI';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IMovie } from './MovieDetails';\r\n\r\nconst Home = () => {\r\n    const [movies, setMovies] = useState<IMovie[]>([]);\r\n\r\n    useEffect(() => {\r\n        const fetchMovies = async () => {\r\n            try {\r\n            const response = await moviesAPI.fetchTranding()\r\n            setMovies(response);\r\n            } catch (error) {\r\n            console.log(error)\r\n            }\r\n        }\r\n        fetchMovies();\r\n    }, [])\r\n\r\n    return (\r\n        <ul style={{display: \"flex\", flexDirection: 'column', gap: \"10px\"}}>\r\n            {movies && movies.map(({id, title}) => \r\n            (<li key={id} style={{fontSize: 15, fontWeight: 500}}>\r\n              <Link to={`/movies/${id}`}>{title}</Link>\r\n              </li>))}\r\n        </ul>\r\n    );\r\n  };\r\n\r\n  export default Home;"],"names":["axios","defaults","baseURL","API_KEY","fetchTranding","async","get","concat","data","results","fetchDetailInfo","movie_id","fetchCastInfo","fetchReviews","fetchBySearch","value","Home","movies","setMovies","useState","useEffect","response","moviesAPI","error","console","log","fetchMovies","_jsx","style","display","flexDirection","gap","children","map","_ref","id","title","fontSize","fontWeight","Link","to"],"sourceRoot":""}